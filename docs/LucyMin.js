(function(a,b){'object'==typeof exports&&'undefined'!=typeof module?module.exports=b():'function'==typeof define&&define.amd?define(b):a.Lucy=b()})(this,function(){'use strict';let a;const b=(...b)=>{return a(...b)};b.superMethod=(b)=>{a=b};const c=Object,d=c.keys,e=c.is,f=c.assign,g=c.getOwnPropertyDescriptor,h=c.defineProperty,i=c.getOwnPropertyNames,j=(a)=>{return d(a).length};f(b,{keys:d,is:e,assign:f,getOwnPropertyDescriptor:g,defineProperty:h,getOwnPropertyNames:i,objectSize:j});f(b,{asyncEach:async(a,b)=>{const c=a.length;for(let d=0;d<c;d++){const e=a[d];await e(b,d,c)}}});const k=(a,b,c)=>{const d=c?a:0,e=c?b:a;for(let f=d;f<e;f++)(c||b)(f,d,e)},l=(a,b)=>{const c=a.length;for(let d=c-1;0<=d;d--)b(a[d],d,a,c)},m=(a,b)=>{const c=a.length;for(let d=0;d<c;d++)b(a[d],d,a,c)},n=(a)=>{return(b,c)=>{const d=[];return a(b,(a,b,e,f)=>{d[b]=c(a,b,e,f,d)}),d}},o=(a,b)=>{const c=[];let d;return m(a,(a,e,f,g)=>{d=b(a,e,f,g,c),v(d)&&c.push(d)}),c},p=n(m),q=n(l),r=((a)=>{return(b,c)=>{const d=b.length;for(let e=0;e<d&&c(b[e],e,b,d)===a;e++);}})(!0);f(b,{eachArray:m,eachArrayRight:l,eachWhile:r,filterArray:o,mapArray:p,mapArrayRight:q,mapWhile:(a,b)=>{const c=a.length,d=[];let e;for(let f=0;f<c&&(e=b(a[f],f,a,c),!!e);f++)d[f]=e;return d},times:k,timesMap:(a,b,c)=>{const d=c?a:0,e=c?b:a,f=[];let g;return k(d,e,(a)=>{g=(c||b)(a,f,d,e),v(g)&&f.push(g)}),f}});const s=(a)=>{return`[object ${a}]`},t=function(a){return void 0===a},u=(a)=>{return null===a},v=(a)=>{return!t(a)&&!u(a)},w=(a)=>{return(b)=>{return!!v(b)&&b.toString()===a}},x=(a)=>{return(b)=>{return!!v(b)&&b.constructor===a}},y=/\.|\+/,z=Array.isArray,A=x(String),B=x(Number),C=(a)=>{return!!v(a)&&'Object('===a.constructor.toString().trim().slice(9,16)},D=(a)=>{return!!v(a)&&a instanceof Function},E=(a)=>{return!!a.length},F=(a)=>{return(b)=>{return!!v(b)&&a.test(b)}},G=F(/\.css$/),H=F(/\.json$/),I=F(/\.js$/),J=/\.([0-9a-z]+)/;m(['RegExp','Arguments','Boolean','Date','Error','Map','Object','Set','WeakMap','ArrayBuffer','Float32Array','Float64Array','Int8Array','Int16Array','Int32Array','Uint8Array','Uint8ClampedArray','Uint16Array','Uint32Array'],(a)=>{b[`is${a}`]=w(s(a))}),f(b,{getFileExtension:(a)=>{return a.match(J)},has:(a,...b)=>{return a.includes(...b)},hasLength:E,hasValue:v,isArray:z,isDecimal:(a)=>{return a.toString().match(y)},isEmpty:(a)=>{return A(a)||z(a)?!E(a):C(a)?!j(a):!v(a)},isFileCSS:G,isFileJS:I,isFileJSON:H,isFunction:D,isNull:u,isNumber:B,isPlainObject:C,isString:A,isUndefined:t});const K=(a)=>{return z(a)?a:[a]};f(b,{ensureArray:K});const L=(a,b=1)=>{let c=a;for(let d=0;d<b;d++)c=c.reduce((a,b)=>{return a.concat(K(b))},[]);return c};f(b,{flatten:L,flattenDeep:(a)=>{return a.reduce((a,b)=>{return a.concat(z(b)?L(b):b)},[])}});f(b,{remove:(a,b)=>{const c=K(b);return m(a,(b,d)=>{c.includes(b)&&a.splice(a,d,1)}),a}});f(b,{chunk:(a,b=1)=>{const c=[];let d=0;return a.forEach((a,e)=>{e%b||(c.push([]),e&&d++),c[d].push(a)}),c}});const M=(a)=>{return(...b)=>{return(c)=>{let d;return a(b,(a)=>{const b=v(d)?d:c;d=a(b)}),d}}},N=M(m),O=M(l);f(b,{flow:N,flowRight:O});f(b,{rest:(a)=>{return a.slice(1,a.length-1)}});const P=(a)=>{return a.length=0,a};f(b,{clear:P});const Q=(a,b,c={})=>{return m(b,(b,d)=>{a(b,d,c)}),c};f(b,{arraySortToObject:Q});f(b,{groupBy:(a,b)=>{return Q((a,c,d)=>{const e=b(a);d[e]||(d[e]=[]),d[e].push(a)},a)}});f(b,{right:(a,b)=>{return a[a.length-1-b]}});f(b,{cloneArray:(a)=>{return a.splice()}});const R=Math,S=R.floor,T=R.random,U=(a,b=0)=>{return S(T()*(a-b))+b};f(b,{add:(a,b)=>{return a+b},minus:(a,b)=>{return a-b},divide:(a,b)=>{return a/b},multiply:(a,b)=>{return a*b},remainder:(a,b)=>{return a%b},increment:(a)=>{return a+1},deduct:(a)=>{return a-1},randomArbitrary:(a,b=0)=>{return T()*(a-b)+b},randomInt:U});f(b,{sample:(a,b=1)=>{if(1===b)return a[U(a.length-1,0)];const c=[],d={};for(let e,f=0;f<b;)e=U(a.length-1,0),d[e]||(c.push(c[e]),d[e]=!0,f++);return c}});f(b,{compact:(a)=>{return a.filter((a)=>{return A(a)&&!a.length?!1:a})}});f(b,{indexBy:(a,b)=>{return Q((a,c,d)=>{d[a[b]]=a},a)}});const V=Array,W=V.from;f(b,{toArray:W});f(b,{shuffle:(a,b=1)=>{const c=W(a);for(let d,e,f=0;f<b;)d=U(c.length-1,0),e=c[f],c[f]=c[d],c[d]=e,f++;return c}});f(b,{countBy:(a,b)=>{const c={};let d;return m(a,(a)=>{d=b(a),c[d]||(c[d]=0),c[d]++}),c},countKey:(a,b)=>{let c=0;return m(a,(a)=>{a[b]&&c++}),c},countNoKey:(a,b)=>{let c=0;return m(a,(a)=>{a[b]||c++}),c}});f(b,{initial:(a)=>{return a.slice(0,a.length-1)}});const X=Math.min;f(b,{smallest:(a)=>{return X(...a)}});const Y=(a,b,c)=>{const d=[];for(let e=a;e<b;)d.push(e),e+=c;return d},Z=(a,b,c)=>{const d=0>c?-1*c:c,e=[];for(let f=a;f<b;)e.push(f),f-=d;return e};f(b,{range:(a,b,c=1)=>{return a<b?Y(a,b,c):Z(a,b,c)},rangeRight:(a,b,c=1)=>{return Z(b,a,c)}});f(b,{intersection:(a,...b)=>{let c;return o(a,(a)=>{if(c=!0,m(b,(b)=>{b.includes(a)||(c=!1)}),c)return a})}});f(b,{sortAlpha:(a,b)=>{let c,d;return a.sort((a,e)=>{return(c=a[b],d=e[b],c<d)?-1:c>d?1:0}),a}});f(b,{difference:(a,b)=>{return o(a,(a)=>{if(!b.includes(a))return a})}});f(b,{invoke:(a,b,c)=>{return p(a,(a)=>{return a[b](...c)})}});const $=(a,b,c=a.length)=>{return a.splice(b,c)};f(b,{drop:$,dropRight:(a,b)=>{return $(a,0,a.length-b)}});const _=(a,b)=>{let c=!1;return b.length===a.length&&r(a,(a,d)=>{return c=b[d]!==a,c}),c};f(b,{isMatchArray:_});f(b,{sortedIndex:(a,b)=>{let c=0;return m(a,(a,d)=>{b>a&&(c=d)}),0<c&&++c,c}});const aa=Math.max;f(b,{largest:(a)=>{return aa(...a)}});f(b,{sumOf:(a,b=0)=>{let c,d=b;return m(a,(a)=>{c=a,c&&(d+=+c)}),d}});const ba=async(a,b)=>{const c=a.length;for(let d=0;d<c;d++)await b(a[d],d,c)};f(b,{eachAsync:ba});f(b,{last:(a,b)=>{const c=a.length;return b?a.slice(c-b,c):a[c-1]}});f(b,{takeRight:(a,b)=>{return a.slice(a.length-b,b)},take:(a,b)=>{return a.slice(0,b)}});f(b,{mapAsync:async(a,b)=>{const c=[];return await ba(a,async(a,d,e)=>{c[d]=await b(a,d,e)}),c}});const ca=(a,b,c)=>{return c.indexOf(a)===b},da=(a,b,c)=>{return a!==c[b-1]},ea=(a,b)=>{return b?a.filter(da):a.filter(ca)};f(b,{unique:ea});f(b,{union:(...a)=>{const b=[];return m(a,(a)=>{m(ea(a),(a)=>{b.includes(a)&&b.push(a)})}),b}});f(b,{filterAsync:async(a,b)=>{const c=[];let d;return await ba(a,async(a,e,f)=>{d=await b(a,e,f),v(d)&&c.push(d)}),c}});const fa=(c,a)=>{return c-a};f(b,{numSort:(a)=>{return a.sort(fa)}});f(b,{findDifference:(a,b)=>{const c={},d=a.length;let e,f,g;for(let h=0;h<d;h++)if(e=a[h],f=b-e,g=a.indexOf(f),-1!==g&&g!==h){c.start=e,c.end=f,c.startIndex=h,c.endIndex=g;break}return c}});f(b,{arrayToObject:(a,b)=>{return Q((a,c,d)=>{d[b[c]]=a},a)}});f(b,{without:(a,...b)=>{return a.filter((a)=>{return!b.includes(a)})}});const ga=(a,b,c,d,e)=>{if(a[e]===d)return!0};f(b,{findItem:(a,b,c='id')=>{const d=a.find((d,e)=>{return ga(d,e,a,b,c)});return-1!==d&&d},findIndex:(a,b,c='id')=>{const d=a.findIndex((d,e)=>{return ga(d,e,a,b,c)});return-1!==d&&d}});f(b,{partition:(a,b)=>{const c=[];return[o(a,(a)=>{return b(a)?a:void c.push(a)}),c]}});f(b,{xor:(a)=>{const b=[];return m(a,(a)=>{m(ea(a),(a)=>{b.includes(a)?b.splice(b.indexOf(a),1):b.push(a)})}),b}});f(b,{findSum:(a,b)=>{const c={},d=a.length;let e,f,g;for(let h=0;h<d;h++)if(e=a[h],f=b-e,g=a.indexOf(f),-1!==g&&g!==h){c.start=e,c.end=f,c.startIndex=h,c.endIndex=g;break}return c}});f(b,{pluck:(a,b)=>{let c;return c=z(b)?(a)=>{return Q((b,c,d)=>{d[b]=a[b]},b)}:(a)=>{const c=a[b];return c},p(a,c)}});f(b,{zip:(...a)=>{return a[0].map((b,c)=>{return a.map((a)=>{return a[c]})})},unZip:(a)=>{return a[0].map((b,c)=>{return a.map((a)=>{return a[c]})})}});f(b,{first:(a,b)=>{return b?a.slice(0,b):a[0]}});const ha=(c,a)=>{return a-c};f(b,{rNumSort:(a)=>{return a.sort(ha)}});const ia=(a,b,c)=>{const d=c?a:[...a];return d.sort((a,c)=>{return c[b]?a[b]?a[b]<c[b]?1:a[b]>c[b]?-1:0:1:-1})};f(b,{getNewest:(a,b)=>{return ia(a,b)[0]},sortNewest:ia});const ja=(a,b,c)=>{const d=c?a:[...a];return d.sort((a,c)=>{return c[b]?a[b]?a[b]<c[b]?1:a[b]>c[b]?-1:0:1:-1})};f(b,{getOldest:(a,b)=>{return ja(a,b)[0]},sortOldest:ja});f(b,{ary:(a,b)=>{return(...c)=>{return a(...c.splice(0,b))}}});f(b,{curry:(a)=>{const b=[],c=(...a)=>{return m(a,(a)=>{b.push(a)}),c};return c.result=()=>{const c=a(...b);return P(b),c},c},curryRight:(a)=>{const b=[],c=(...a)=>{return m(a,(a)=>{b.unshift(a)}),c};return c.result=()=>{const c=a(...b);return P(b),c},c}});const ka=(a,b)=>{let c=a;return(...a)=>{if(c--,0>c)return b(...a)}},la=(a,b)=>{let c=a;return(...a)=>{if(c--,0<c)return b(...a)}};f(b,{onAfter:(a,b)=>{return ka(a-1,b)},onBefore:(a,b)=>{return la(a+1,b)},once:(a)=>{let b;return(...c)=>{return b||(b=a(...c)),b}}});f(b,{stubObject:()=>{return{}},stubArray:()=>{return[]},stubString:()=>{return''},stubTrue:()=>{return!0},stubFalse:()=>{return!1},noop:()=>{}});const ma=(a,b)=>{m(d(a),(c,d,e,f)=>{b(a[c],c,a,f)})},na=(a,b)=>{const c={};return ma(a,(a,d,e,f)=>{c[d]=b(a,d,e,f)}),c},oa=(a,b)=>{const c={};let d;return ma(a,(a,e,f,g)=>{d=b(a,e,f,g),v(d)&&(c[e]=d)}),c};f(b,{eachObject:ma,filterObject:oa,forIn:(a,b)=>{const c={};for(const d in a)c[d]=b(a[d],d,a,c);return c},mapObject:na,mapProperty:(a,b)=>{const c={};return m(i(a),(d,e,f)=>{c[d]=b(a[d],d,a,f,c)}),c}});const pa=(a,b)=>{return a.forEach(b)},qa=(a,b)=>{return(c,d)=>{let e;if(v(c))return e=z(c)?a:C(c)||D(c)?b:c.forEach?pa:b,e(c,d)}},ra=qa(p,na),sa=qa(m,ma),ta=qa(o,oa);f(b,{each:sa,filter:ta,map:ra});f(b,{bindAll:(a,b)=>{return ra(a,(a)=>{return D(a)?a.bind(b):a})}});f(b,{ifInvoke:(a,...b)=>{if(D(a))return a(...b)}});f(b,{negate:(a)=>{return(...b)=>{return!a(...b)}}});f(b,{over:(a)=>{return(...b)=>{return a.map((a)=>{return a(...b)})}},overEvery:(a)=>{return(...b)=>{let c;return a.find(a,(a)=>{return c=!!a(...b),c}),c}}});const ua=(a,b)=>{return setTimeout(a,b)};f(b,{interval:(a,b)=>{return setInterval(a,b)},timer:ua,debounce:(a,b)=>{let c=!1;const d=(...d)=>{!1!=c&&clearTimeout(c),c=ua(()=>{a(...d),c=!1},b)};return d.clear=()=>{c&&(clearTimeout(c),c=!1)},d},throttle:(a,b)=>{let c,d=!1;const e=(...e)=>{return d?void(c=!0):void(a(...e),d=ua(()=>{c&&a(...e),d=!1},b))};return e.clear=()=>{clearTimeout(d),d=!1},e}});const va=(a,b)=>{return sa(b,(b,c)=>{a.methods[c]=(...c)=>{return c.unshift(a.value),b(...c),a.methods}}),a};f(b,{chain:(a)=>{const b=(a)=>{return b.value=a,b.methods};return f(b,{methods:{},link(a){return va(b,a)},done(){const a=b.value;return b.value=null,a}}),b.link(a),b}});f(b,{inAsync:async(a,b)=>{await ba(a,async(a)=>{await a(b)})},inSync:(a,b)=>{return sa(a,(a)=>{a(b)})}});f(b,{nthArg:(a)=>{let b=a;return(...a)=>{return 0>b&&(b=a.length- -1*b),a[b]}}});f(b,{reArg:(a,b)=>{return(...c)=>{return a(...b.map((a)=>{return c[a]}))}}});f(b,{wrap:(...a)=>{const b=[],c=(...a)=>{return b.map((b)=>{return b(...a)})};return f(c,{list:b,add(...a){b.push(...a)}}),c.add(a),c},wrapBefore:(...a)=>{const b=[],c=(...a)=>{return b.map((b)=>{return b(...a)})};return f(c,{list:b,add(...a){b.unshift(...a.reverse())}}),c.add(a),c}});f(b,{isNumberInRange:(a,b=0,c=b)=>{return a>b&&a<c},isNumberEqual:(a,b)=>{return a===b},isZero:(a)=>{return 0===a}});const wa=(a,b,c)=>{return ma(b,(b,d)=>{C(b)&&C(a[d])?wa(a[d],b,c):c&&z(b)&&z(a[d])?a[d].push(...b):a[d]=b}),a};f(b,{assignDeep:wa});f(b,{hasAnyKeys:(a,b)=>{const c=d(a),e=b.find((a)=>{return c.include(a)});return e},hasKeys:(a,b)=>{let c=!1;const e=d(a);return r(b,(a)=>{return c=e.include(a),c}),c}});const xa=(a,b)=>{let c=!1;if(a===b)c=!0;else if(a.toString()===b.toString())if(C(a)){const e=d(a);_(e,d(b))&&r(e,(d)=>{return c=xa(a[d],b[d]),c})}else z(a)&&a.length===b.length&&r(a,(a,d)=>{return c=xa(a,b[d]),c});return c};f(b,{isEqual:xa});f(b,{pick:(a,b,c)=>{return Q((a,c,d)=>{d[a]=b[a]},a,c)}});f(b,{compactKeys:(a)=>{const b=[];return ma(a,(a,c)=>{v(a)&&b.push(c)}),b}});f(b,{isMatchObject:(a,b)=>{let c=!1;const e=d(a);return _(e,d(b))&&r(e,(d)=>{return c=a[d]===b[d],c}),c}});f(b,{zipObject:(a,b)=>{return Q((a,c,d)=>{d[a]=b[c]},a)},unZipObject:(a)=>{const b=[],c=[];return ma(a,(a,d)=>{b.push(d),c.push(a)}),[b,c]}});f(b,{invert:(a,b={})=>{return ma(a,(a,c)=>{b[a]=c}),b}});f(b,{omit:(a,b)=>{return oa(a,(a,c)=>{if(!b.includes(c))return a})}});const ya=/[-_]/g,za=/ (.)/g;f(b,{upperCase:(a)=>{return a.replace(ya,' ').trim().toUpperCase()},camelCase:(a)=>{const b=a.toLowerCase().replace(za,(a)=>{return a.toUpperCase()});return b},kebabCase:(a)=>{return a.replace(ya,' ').trim().toLowerCase().replace(za,'-$1')},snakeCase:(a)=>{return a.replace(ya,' ').trim().toLowerCase().replace(za,'_$1')}});f(b,{chunkString:(a,b)=>{return a.match(new RegExp(`(.|[\r\n]){1, ${b}}`,'g'))},initialString:(a)=>{return a.slice(0,-1)},insertInRange:(a,b,c,d)=>{return a.slice(0,b)+d+a.slice(c,a.length)},restString:(a)=>{return a.slice(1,a.length)},rightString:(b,c)=>{return b[b.length-1-c]}});f(b,{replaceWithList:(a,b,c)=>{return a.replace(new RegExp(`\\b${b.join('|')}\\b`,'gi'),c)}});const Aa=/%(?![\da-f]{2})/gi,Ba=/&/g,Ca=/</g,Da=/>/g,Ea=/"/g,Fa=(a)=>{return decodeURIComponent(a.replace(Aa,()=>{return'%25'}))},Ga=(a)=>{let b=a;return b=b.replace(Ba,'&amp;'),b=b.replace(Ca,'&lt;'),b=b.replace(Da,'&gt;'),b.replace(Ea,'&quot;')};f(b,{createHtmlEntities:Ga,rawURLDecode:Fa,sanitize:(a)=>{return Ga(Fa(a))}});const Ha=/\S+/g,Ia=/\w+/g;f(b,{tokenize:(a)=>{return a.match(Ha)||[]},words:(a)=>{return a.match(Ia)||[]}});f(b,{truncate:(a,b)=>{let c=a;return c.length>b&&(c=c.slice(0,b)),c},truncateLeft:(a,b)=>{let c=a;const d=c.length;return d>b&&(c=c.substr(b,d)),c},truncateWord:(a,b)=>{return a.substring(0,b)}});const Ja=/ (.)/g,Ka=(a)=>{return a[0].toUpperCase()},La=(a,b=1)=>{return a.substr(b)};f(b,{restString:La,upperFirst:(a)=>{return Ka(a)+La(a)},upperFirstAll:(a)=>{return a.replace(Ja,(a)=>{return a.toUpperCase()})},upperFirstOnly:(a)=>{return Ka(a)+La(a).toLowerCase()},upperFirstOnlyAll:(a)=>{return a.toLowerCase().replace(Ja,(a)=>{return a.toUpperCase()})}});const Ma=Function.prototype;f(b,{cacheNativeMethod:function(a){return Ma.call.bind(a)}});f(b,{ifNotEqual:(a,b,c)=>{return b&&!v(a[b])?(a[b]=c,a[b]):a}});const Na=/\.|\[/,Oa=/]/g,Pa='',Qa=(a=Pa)=>{return a.replace(Oa,Pa).split(Na)};f(b,{toPath:Qa});const Ra=(a,c=b)=>{let d=c;return r(Qa(a),(a)=>{return d=d[a],v(d)}),d};f(b,{get:Ra});f(b,{matchesProperty:(a,b)=>{return(c)=>{return Ra(a,c)===b}}});let Sa=0;const Ta=[],Ua={},Va=()=>{let a=Ta.shift(Ta);return v(a)||(a=Sa,Ua[a]=!0,Sa++),a};Va.remove=(a)=>{Ua[a]=null,Ta.push(a)},f(b,{uuid:Va});const Wa=JSON,Xa=Wa.jsonParse,Ya=Wa.stringify;f(b,{jsonParse:Xa,stringify:Ya});const Za=(a,b)=>{return v(b)&&(Za[a]=b),Ra(a,Za)};b.superMethod(Za),f(b,{model:Za});f(b,{promise:(a)=>{return new Promise(a)}});return f(b,{toggle:(a,b,c)=>{return a===b?c:b}}),b});